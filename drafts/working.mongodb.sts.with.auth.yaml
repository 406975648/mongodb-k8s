apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: 2018-06-11T07:26:07Z
  generation: 1
  labels:
    app: mongodb-replicaset
    chart: mongodb-replicaset-3.4.1
    heritage: Tiller
    release: my-release
  name: my-release-mongodb-replicaset
  namespace: demo
  resourceVersion: "14457"
  selfLink: /apis/apps/v1/namespaces/demo/statefulsets/my-release-mongodb-replicaset
  uid: b4c4025c-6d48-11e8-b260-0800272a2332
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongodb-replicaset
      release: my-release
  serviceName: my-release-mongodb-replicaset
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongodb-replicaset
        release: my-release
    spec:
      containers:
      - args:
        - --config=/data/configdb/mongod.conf
        - --dbpath=/data/db
        - --replSet=rs0
        - --port=27017
        - --bind_ip=0.0.0.0
        - --auth
        - --keyFile=/data/configdb/key.txt
        command:
        - mongod
        image: mongo:3.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongodb-replicaset
        ports:
        - containerPort: 27017
          name: peer
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/db
          name: datadir
        - mountPath: /data/configdb
          name: configdir
        - mountPath: /work-dir
          name: workdir
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - -c
        - |
          set -e
          set -x

          cp /configdb-readonly/mongod.conf /data/configdb/mongod.conf
          cp /keydir-readonly/key.txt /data/configdb/key.txt
          chmod 600 /data/configdb/key.txt
        command:
        - sh
        image: busybox
        imagePullPolicy: Always
        name: copy-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /configdb-readonly
          name: config
        - mountPath: /data/configdb
          name: configdir
        - mountPath: /keydir-readonly
          name: keydir
      - args:
        - --work-dir=/work-dir
        image: k8s.gcr.io/mongodb-install:0.6
        imagePullPolicy: IfNotPresent
        name: install
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
      - args:
        - -on-start=/init/on-start.sh
        - -service=my-release-mongodb-replicaset
        command:
        - /work-dir/peer-finder
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: REPLICA_SET
          value: rs0
        - name: AUTH
          value: "true"
        - name: ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: my-release-mongodb-replicaset-admin
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: my-release-mongodb-replicaset-admin
        image: mongo:3.6
        imagePullPolicy: IfNotPresent
        name: bootstrap
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /init
          name: init
        - mountPath: /data/configdb
          name: configdir
        - mountPath: /data/db
          name: datadir
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: my-release-mongodb-replicaset-mongodb
        name: config
      - configMap:
          defaultMode: 493
          name: my-release-mongodb-replicaset-init
        name: init
      - name: keydir
        secret:
          defaultMode: 256
          secretName: my-release-mongodb-replicaset-keyfile
      - emptyDir: {}
        name: workdir
      - emptyDir: {}
        name: configdir
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    status:
      phase: Pending
status:
  collisionCount: 0
  currentReplicas: 2
  currentRevision: my-release-mongodb-replicaset-87799879
  observedGeneration: 1
  readyReplicas: 1
  replicas: 2
  updateRevision: my-release-mongodb-replicaset-87799879
